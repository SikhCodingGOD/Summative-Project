package PasswordManager;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFrame;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

public class MainWindow extends JFrame {
    private final JLabel title;
    private final JButton viewPW;
    private final JButton addPW;
    private final JButton changePW;
    private final JButton deletePW;
    private final JButton randomPW;

    public MainWindow() {
        super("Password Manager");
        setLayout(new GridBagLayout());
        
        
        //objects which will appear on the window
        
        title = new JLabel("The Password Manager - created by Long & Short Inc.");
        
        viewPW = new JButton("View Stored Passwords");
        
        addPW = new JButton("Add Password");
        
        changePW = new JButton("Change Password");
        
        deletePW = new JButton("Delete A Stored Password");
        
        randomPW = new JButton("Generate Random Password");
        
        
        //layout of the window
        
        
        GridBagConstraints grid = new GridBagConstraints();
        
        grid.weightx = 1; //amount of horizontal space for each grid box
        grid.weighty = 1; //amount of vertical space for each grid box
        
        grid.gridx = 0;
        grid.gridy = 0;
        add(title, grid);
        
        grid.anchor = GridBagConstraints.PAGE_START;
        grid.gridx = 0;
        grid.gridy = 1;
        add(viewPW, grid);
        
        grid.gridx = 0;
        grid.gridy = 2;
        add(addPW, grid);
        
        grid.gridx = 0;
        grid.gridy = 3;
        add(changePW,grid);
        
        grid.gridx = 0;
        grid.gridy = 4;
        add(deletePW, grid);
        
        grid.gridx = 0;
        grid.gridy = 5;
        add(randomPW, grid);
        
        
        //event handling
        
        
        viewPW.addActionListener(new ActionListener() { //anonymous inner class defines what will happen when the 'viewPW' object is clicked
            @Override
            public void actionPerformed(ActionEvent event) {
                int data = 0;
                try {
                    FileReader reader = new FileReader(new File("C:\\Users\\jovin\\Downloads\\PasswordManager\\websites.txt"));
                    data = reader.read();
                }
                catch (FileNotFoundException e) {
                    e.printStackTrace();
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
                if (data == -1) { //are there any saved passwords?
                    JOptionPane.showMessageDialog(null, "You don't have any saved passwords.");
                }
                else {
                    StoredPasswordWindow storedWindow = new StoredPasswordWindow();
                    storedWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    storedWindow.setSize(450, 300);
                    storedWindow.setVisible(true);
                    storedWindow.setResizable(false);
                    dispose();
                }
            }
        });
        
        addPW.addActionListener(new ActionListener() { //anonymous inner class defines what will happen when the 'addPW' object is clicked
            @Override
            public void actionPerformed(ActionEvent event) {
                
                AddPasswordWindow addWindow = new AddPasswordWindow();
                addWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                addWindow.setSize(500, 300);
                addWindow.setVisible(true);
                addWindow.setResizable(false);
                dispose();
            }
        });
        
        changePW.addActionListener(new ActionListener() { //anonymous inner class defines what will happen when the 'changePW' object is clicked
            @Override
            public void actionPerformed(ActionEvent event) { //are there any saved passwords?
                int data = 0;
                try {
                    FileReader reader = new FileReader(new File("C:\\Users\\jovin\\Downloads\\PasswordManager\\websites.txt"));
                    data = reader.read();
                }
                catch (FileNotFoundException e) {
                    e.printStackTrace();
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
                if (data == -1) {
                    JOptionPane.showMessageDialog(null, "You don't have any saved passwords.");
                }                
                else {
                    ChangePasswordWindow changeWindow = new ChangePasswordWindow();
                    changeWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    changeWindow.setSize(400, 250);
                    changeWindow.setVisible(true);
                    changeWindow.setResizable(false);
                    dispose();
                }
            }
        });
        
        deletePW.addActionListener(new ActionListener() { //anonymous inner class defines what will happen when the 'changePW' object is clicked
            @Override
            public void actionPerformed(ActionEvent event) {
                int data = 0;
                try { //are there any saved passwords?
                    FileReader reader = new FileReader(new File("C:\\Users\\jovin\\Downloads\\PasswordManager\\websites.txt"));
                    data = reader.read();
                }
                catch (FileNotFoundException e) {
                    e.printStackTrace();
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
                if (data == -1) {
                    JOptionPane.showMessageDialog(null, "You don't have any saved passwords.");
                }                
                else {
                    DeletePasswordWindow deleteWindow = new DeletePasswordWindow();
                    deleteWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    deleteWindow.setSize(400, 250);
                    deleteWindow.setVisible(true);
                    deleteWindow.setResizable(false);
                    dispose();
                }
            }
        });
        
        randomPW.addActionListener(new ActionListener() { //anonymous inner class defines what will happen when the 'changePW' object is clicked
            @Override
            public void actionPerformed(ActionEvent event) {
                
                RandomPasswordWindow randomWindow = new RandomPasswordWindow();
                randomWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                randomWindow.setSize(500, 300);
                randomWindow.setVisible(true);
                randomWindow.setResizable(false);
                dispose();
            }
        });
    }
}
