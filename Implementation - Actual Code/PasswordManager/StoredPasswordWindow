package PasswordManager;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

public class StoredPasswordWindow extends JFrame {
    private final JLabel heading;
    private final JComboBox<String> listOfWebsites;
    private final JButton viewBtn;
    private final JButton ReturnBtn;
    
    public StoredPasswordWindow() {
        super("Password Manager"); //title which appears on the top left corner of the window
        setLayout(new GridBagLayout());
        
        
        //getting the list of websites and passwords from files
        
                
        BufferedReader reader = null;
        ArrayList<String> arrayListWebsites = new ArrayList<String>();
        
        try { //list of websites
            File file = new File("C:\\Users\\jovin\\Downloads\\PasswordManager\\websites.txt");
            reader = new BufferedReader(new FileReader(file));
            reader.readLine();
            String line;
            while((line = reader.readLine())!=null) {
                arrayListWebsites.add(line);
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                reader.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        
        String[] websites = arrayListWebsites.toArray(new String[0]); //converts the arraylist to an array so it can be passed as a parameter for a JComboBox
        
        BufferedReader reader2 = null;
        ArrayList<String> listPasswords = new ArrayList<String>();
        
        try { //list of passwords
            File file = new File("C:\\Users\\jovin\\Downloads\\PasswordManager\\passwords.txt");
            reader = new BufferedReader(new FileReader(file));
            reader.readLine();
            String line;
            while((line = reader.readLine())!=null) {
                listPasswords.add(line);
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                reader.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        
        String[] passwords = listPasswords.toArray(new String[0]);
        
        
        //objects in window
        
        
        heading = new JLabel("For which website would you like to view your password?");
        
        listOfWebsites = new JComboBox<>(websites);
        
        viewBtn = new JButton("View");
        
        ReturnBtn = new JButton("Return");
        
        
        //layout of the window
        
        
        GridBagConstraints grid = new GridBagConstraints();
        
        grid.weightx = 1; //amount of horizontal space for each grid box
        grid.weighty = 1; //amount of vertical space for each grid box
        
        grid.gridx = 0;
        grid.gridy = 0;
        add(heading, grid);
        
        grid.gridy = 1;
        add(listOfWebsites, grid);
        
        grid.anchor = GridBagConstraints.PAGE_START;
        grid.gridy = 2;
        add(viewBtn,grid);
        
        grid.gridy = 3;
        add(ReturnBtn,grid);
        
        
        //event handling
        
        
        viewBtn.addActionListener(new ActionListener() { //go to view window
            @Override
            public void actionPerformed(ActionEvent event) {
                int index = listOfWebsites.getSelectedIndex();
                
                String password = passwords[index];
                
                ViewWindow viewWindow = new ViewWindow(listOfWebsites.getSelectedItem().toString(), password);
                viewWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                viewWindow.setSize(400, 250);
                viewWindow.setVisible(true);
                viewWindow.setResizable(false);
                dispose();
        }
    });
        
        ReturnBtn.addActionListener(new ActionListener() { //go back to main window
            @Override
            public void actionPerformed(ActionEvent event) {
                MainWindow mainWindow = new MainWindow();
                mainWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                mainWindow.setSize(500, 300);
                mainWindow.setVisible(true);
                mainWindow.setResizable(false);
                dispose();
            }
        });
    }
}
